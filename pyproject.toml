[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
target-version = ["py311"]
preview = true
line-length = 88

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
# F Pyflake
# E, W pycodestyle
# C mccabe
# I isort
# N  pep8 Naming
# D pydocstyle
# UP pyupgrade
# YTT flake8 2020
# ANN flake8 annotations
# S flake8-bandit
# BLE flake8-blind-except
# FBT flake8-boolean-trap
# B flake8-bugbear
# A flake8-builtins
# COM flake8-commas
# C4 flake8-comprehensions
# DTZ flake8-datetimez
# T10 flake8-debugger
# DJ flake8-django
# EM flake8-errmsg
# EXE flake8-executable
# ISC flake8-implicit-str-concat
# ICN flake8-import-conventions
# G flake8-logging-format
# INP flake8-no-pep420
# PIE flake8-pie
# T20 flake8-print
# PYI flake8-pyi
# PT flake8-pytest-style
# Q flake8-quotes
# RET flake8-return
# SIM flake8-simplify
# TID flake8-tidy-imports
# TCH flake8-type-checking
# ARG flake8-unused-arguments
# PTH flake8-use-pathlib
# ERA eradicate
# PD pandas-vet
# PGH pygrep-hooks
# PL Pylint
# PLC     Convention
# PLE     Error
# PLR     Refactor
# PLW     Warning
# TRY tryceratops
# RSE flake8-raise
# SLF flake8-self
# RUF Ruff-specific rules
select = [
    "F",
    "E",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "EXE",
    "ISC",
    "ICN",
    "INP",
    "PIE",
    "T20",
    "PT",
    "Q",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "TRY",
    "RUF",
]

ignore = [
    "D",
    "EXE002",
    "PLR0913",
    "S311",
    "INP001",  # No __init__.py but here it's for the advent of code so no packages
    "T201",    # No print() but here it's for the advent of code so we need some
] # All Documentation related + The file is executable but no shebang is present

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "F",
    "E",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "EXE",
    "ISC",
    "ICN",
    "INP",
    "PIE",
    "T20",
    "PT",
    "Q",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "TRY",
    "RUF",
]
unfixable = ["B", "ERA001"]

# Exclude a variety of commonly ignored directories.
exclude = [".git", ".ruff_cache", ".venv", "build", "dist"]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"*_test.py" = ["S101"]
"test_*.py" = ["S101"]
"*" = ["D"]
